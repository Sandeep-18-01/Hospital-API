{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhsaikir\\\\Desktop\\\\CN\\\\cra_q2_scaffold\\\\src\\\\Component\\\\ImageForm\\\\ImageForm.js\",\n  _s = $RefreshSig$();\n// react hooks\nimport { useEffect, useRef } from \"react\";\n\n// import styles\nimport styles from \"./imageForm.module.css\";\n\n// firestore database\nimport { db } from \"../../firebaseInit\";\nimport { doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\n\n// toast for notification\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// function to render the Image form to add new images to imageList(within any album)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ImageForm(props) {\n  _s();\n  const {\n    albumId,\n    updateImage,\n    setUpdateImage,\n    setShowImageForm\n  } = props;\n\n  // to store image name and image url\n  const imageNameRef = useRef();\n  const imageUrlRef = useRef();\n\n  // check whether to update an image or not\n  useEffect(() => {\n    if (updateImage) {\n      // storing value of image inside the input box when click on edit\n      imageNameRef.current.value = updateImage.name;\n      imageUrlRef.current.value = updateImage.link;\n    }\n  }, [updateImage]);\n\n  // claer image form's data \n  function clearForm() {\n    imageNameRef.current.value = null;\n    imageUrlRef.current.value = null;\n    imageNameRef.current.focus();\n  }\n\n  // to update any image within the imagelist\n  async function handleUpdateSubmit(e) {\n    e.preventDefault();\n\n    // old data of image inside the database\n    const oldData = {\n      name: updateImage.name,\n      link: updateImage.link\n    };\n\n    // new updated data entered by the user\n    const newData = {\n      name: imageNameRef.current.value,\n      link: imageUrlRef.current.value\n    };\n\n    // adding new Image\n    const albumRef = doc(db, 'album', albumId);\n    updateDoc(albumRef, {\n      imageList: arrayUnion(newData)\n    });\n\n    // removing old image \n    updateDoc(albumRef, {\n      imageList: arrayRemove(oldData)\n    });\n    toast.success(\" Image Updated !\");\n\n    // setting update to false\n    setUpdateImage(null);\n\n    // hide the ImageForm\n    setShowImageForm(false);\n\n    // clear data within the ImageForm\n    clearForm();\n  }\n\n  // add a new Image in Image list\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // data of the Image\n    const data = {\n      name: imageNameRef.current.value,\n      link: imageUrlRef.current.value\n    };\n\n    // adding new image inside the array of image in database\n    const albumRef = doc(db, 'album', albumId);\n    await updateDoc(albumRef, {\n      imageList: arrayUnion(data)\n    });\n\n    // success notification\n    toast.success(\"New Image Added to your Album!\");\n\n    // clear form's data\n    clearForm();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: !updateImage ? \"Add an Image\" : \"Update Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updateImage ? handleUpdateSubmit : handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: styles.inputBox,\n          placeholder: \"Enter Name\",\n          ref: imageNameRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: styles.inputBox,\n          placeholder: \"Enter Url\",\n          ref: imageUrlRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.btn} ${styles.add}`,\n          children: !updateImage ? \"Add\" : \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.btn} ${styles.clear}`,\n          onClick: clearForm,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ImageForm, \"XFcd+mAMOVf4LkWgxkca5398Ajo=\");\n_c = ImageForm;\nvar _c;\n$RefreshReg$(_c, \"ImageForm\");","map":{"version":3,"names":["useEffect","useRef","styles","db","doc","updateDoc","arrayUnion","arrayRemove","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageForm","props","_s","albumId","updateImage","setUpdateImage","setShowImageForm","imageNameRef","imageUrlRef","current","value","name","link","clearForm","focus","handleUpdateSubmit","e","preventDefault","oldData","newData","albumRef","imageList","success","handleSubmit","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","inputBox","placeholder","ref","required","btn","add","clear","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhsaikir/Desktop/CN/cra_q2_scaffold/src/Component/ImageForm/ImageForm.js"],"sourcesContent":["// react hooks\r\nimport {useEffect,useRef} from \"react\"\r\n\r\n// import styles\r\nimport styles from \"./imageForm.module.css\"\r\n\r\n// firestore database\r\nimport {db} from \"../../firebaseInit\";\r\nimport { doc, updateDoc, arrayUnion, arrayRemove} from \"firebase/firestore\"; \r\n\r\n// toast for notification\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n// function to render the Image form to add new images to imageList(within any album)\r\nexport default function ImageForm(props){\r\n\r\n    const {albumId,updateImage,setUpdateImage,setShowImageForm} = props;\r\n    \r\n    // to store image name and image url\r\n    const imageNameRef=useRef();\r\n    const imageUrlRef=useRef();\r\n\r\n    // check whether to update an image or not\r\n    useEffect(()=>{\r\n        if(updateImage){\r\n            // storing value of image inside the input box when click on edit\r\n            imageNameRef.current.value=updateImage.name;\r\n            imageUrlRef.current.value=updateImage.link;\r\n        }\r\n    },[updateImage]);\r\n\r\n\r\n    // claer image form's data \r\n    function clearForm(){\r\n        imageNameRef.current.value=null;\r\n        imageUrlRef.current.value=null;\r\n        imageNameRef.current.focus();\r\n    }\r\n\r\n    // to update any image within the imagelist\r\n    async function handleUpdateSubmit(e){\r\n        e.preventDefault();\r\n\r\n        // old data of image inside the database\r\n        const oldData={\r\n            name:updateImage.name,\r\n            link:updateImage.link\r\n        };\r\n        \r\n        // new updated data entered by the user\r\n        const newData={\r\n            name:imageNameRef.current.value,\r\n            link:imageUrlRef.current.value\r\n        };\r\n\r\n        // adding new Image\r\n        const albumRef = doc(db, 'album', albumId);\r\n         updateDoc(albumRef,{\r\n            imageList:arrayUnion(newData)\r\n        });\r\n        \r\n        // removing old image \r\n        updateDoc(albumRef,{\r\n            imageList:arrayRemove(oldData),\r\n            \r\n        });\r\n\r\n        toast.success(\" Image Updated !\")\r\n\r\n        // setting update to false\r\n        setUpdateImage(null);\r\n\r\n        // hide the ImageForm\r\n        setShowImageForm(false);\r\n        \r\n        // clear data within the ImageForm\r\n        clearForm();\r\n    }\r\n\r\n\r\n\r\n    // add a new Image in Image list\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        // data of the Image\r\n        const data={\r\n            name:imageNameRef.current.value,\r\n            link:imageUrlRef.current.value\r\n        };\r\n\r\n        // adding new image inside the array of image in database\r\n        const albumRef = doc(db, 'album', albumId);\r\n        await updateDoc(albumRef,{\r\n            imageList:arrayUnion(data)\r\n        });\r\n\r\n        // success notification\r\n        toast.success(\"New Image Added to your Album!\")\r\n        \r\n        // clear form's data\r\n        clearForm();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <ToastContainer />\r\n            {/* main container of the form  */}\r\n            <div className=\"formContainer\">\r\n                {/* showing heading of the form with condition */}\r\n                <h1>{!updateImage?\"Add an Image\":\"Update Image\"}</h1>\r\n                \r\n                {/* calling submit function on condition */}\r\n                <form onSubmit={updateImage?handleUpdateSubmit:handleSubmit}>\r\n                    \r\n                    {/* for name of the image */}\r\n                    <input type=\"text\"\r\n                        className={styles.inputBox}\r\n                        placeholder=\"Enter Name\"\r\n                        ref={imageNameRef}\r\n                        required/>\r\n\r\n                    {/* for image url */}\r\n                    <input type=\"text\"\r\n                        className={styles.inputBox}\r\n                        placeholder=\"Enter Url\"\r\n                        ref={imageUrlRef}\r\n                        required />\r\n                    <br />\r\n\r\n                    {/* to add/update image */}\r\n                    <button className={`${styles.btn} ${styles.add}`}>\r\n                            {/* show add or update on the button   */}\r\n                        {!updateImage?\"Add\":\"Update\"}\r\n                    </button>\r\n\r\n                    {/* clear data inside the input box */}\r\n                    <button className={`${styles.btn} ${styles.clear}`} \r\n                        onClick={clearForm}>Clear\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}