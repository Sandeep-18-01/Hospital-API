{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhsaikir\\\\Desktop\\\\CN\\\\cra_q2_scaffold\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const url = \"https://v2.jokeapi.dev/joke/Programing?type=single\";\n  const fetchData = async () => {\n    try {\n      const response = await fetch(url);\n      const result = await response.json();\n      if (result.error) {\n        throw new Error(\"Failed to fetch joke\");\n        setData(\"\");\n      }\n      setData(result);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array to run once on mount\n\n  const handleNewJoke = () => {\n    setLoading(true);\n    setError(null);\n    fetchData();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Joke Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Something went wrong: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), !loading && data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.joke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleNewJoke,\n        children: \"New Joke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","url","fetchData","response","fetch","result","json","Error","message","handleNewJoke","className","children","fileName","_jsxFileName","lineNumber","columnNumber","joke","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhsaikir/Desktop/CN/cra_q2_scaffold/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const url = \"https://v2.jokeapi.dev/joke/Programing?type=single\";\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(url);\n      const result = await response.json();\n\n      if (result.error) {\n        throw new Error(\"Failed to fetch joke\");\n        setData(\"\");\n      }\n\n      setData(result);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array to run once on mount\n\n  const handleNewJoke = () => {\n    setLoading(true);\n    setError(null);\n    fetchData();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Joke Generator</h1>\n\n      {loading && <p>Loading...</p>}\n\n      {error && <p>Something went wrong: {error}</p>}\n\n      {!loading && data && (\n        <div>\n          <h2>{data.joke}</h2>\n          <button className=\"btn\" onClick={handleNewJoke}>\n            New Joke\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,GAAG,GAAG,oDAAoD;EAEhE,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MACjC,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,CAACN,KAAK,EAAE;QAChB,MAAM,IAAIQ,KAAK,CAAC,sBAAsB,CAAC;QACvCX,OAAO,CAAC,EAAE,CAAC;MACb;MAEAA,OAAO,CAACS,MAAM,CAAC;IACjB,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;IACzB,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1BX,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdE,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACEV,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEtBlB,OAAO,iBAAIL,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAE5BhB,KAAK,iBAAIP,OAAA;MAAAmB,QAAA,GAAG,wBAAsB,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE7C,CAAClB,OAAO,IAAIF,IAAI,iBACfH,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAKhB,IAAI,CAACqB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBvB,OAAA;QAAQkB,SAAS,EAAC,KAAK;QAACO,OAAO,EAAER,aAAc;QAAAE,QAAA,EAAC;MAEhD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CArDuBD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}