{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhsaikir\\\\Desktop\\\\CN\\\\cra_q2_scaffold\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useReducer, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getFirestore, collection, addDoc, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\n\n// components imports\nimport ExpenseForm from \"./components/ExpenseForm/ExpenseForm\";\nimport ExpenseInfo from \"./components/ExpenseInfo/ExpenseInfo\";\nimport ExpenseList from \"./components/ExpenseList/ExpenseList\";\n\n// react toasts\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst db = getFirestore();\nconst reducer = (state, action) => {\n  const {\n    payload\n  } = action;\n  switch (action.type) {\n    case \"ADD_EXPENSE\":\n      {\n        return {\n          expenses: [payload.expense, ...state.expenses]\n        };\n      }\n    case \"REMOVE_EXPENSE\":\n      {\n        return {\n          expenses: state.expenses.filter(expense => expense.id !== payload.id)\n        };\n      }\n    case \"UPDATE_EXPENSE\":\n      {\n        const expensesDuplicate = state.expenses;\n        expensesDuplicate[payload.expensePos] = payload.expense;\n        return {\n          expenses: expensesDuplicate\n        };\n      }\n    default:\n      return state;\n  }\n};\nfunction App() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, {\n    expenses: []\n  });\n  const [expenseToUpdate, setExpenseToUpdate] = useState(null);\n  useEffect(() => {\n    // Fetch expenses from Firestore and update state\n    const fetchData = async () => {\n      // Assuming 'expenses' is your collection name\n      const querySnapshot = await getDocs(collection(db, \"expenses\"));\n      const expensesData = [];\n      querySnapshot.forEach(doc => {\n        expensesData.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      dispatch({\n        type: \"SET_EXPENSES\",\n        payload: {\n          expenses: expensesData\n        }\n      });\n    };\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once on component mount\n\n  const addExpense = async expense => {\n    try {\n      const docRef = await addDoc(collection(db, \"expenses\"), {\n        ...expense\n      });\n      const newExpense = {\n        ...expense,\n        id: docRef.id\n      };\n      dispatch({\n        type: \"ADD_EXPENSE\",\n        payload: {\n          expense: newExpense\n        }\n      });\n      toast.success(\"Expense added successfully.\");\n    } catch (error) {\n      console.error(\"Error adding expense: \", error);\n      toast.error(\"Error adding expense. Please try again.\");\n    }\n  };\n  const deleteExpense = async id => {\n    try {\n      await deleteDoc(doc(db, \"expenses\", id));\n      dispatch({\n        type: \"REMOVE_EXPENSE\",\n        payload: {\n          id\n        }\n      });\n      toast.success(\"Expense deleted successfully.\");\n    } catch (error) {\n      console.error(\"Error deleting expense: \", error);\n      toast.error(\"Error deleting expense. Please try again.\");\n    }\n  };\n  const resetExpenseToUpdate = () => {\n    setExpenseToUpdate(null);\n  };\n  const updateExpense = async expense => {\n    const expensePos = state.expenses.findIndex(exp => exp.id === expense.id);\n    if (expensePos === -1) {\n      return false;\n    }\n    try {\n      await updateDoc(doc(db, \"expenses\", expense.id), {\n        ...expense\n      });\n      dispatch({\n        type: \"UPDATE_EXPENSE\",\n        payload: {\n          expensePos,\n          expense\n        }\n      });\n      toast.success(\"Expense updated successfully.\");\n    } catch (error) {\n      console.error(\"Error updating expense: \", error);\n      toast.error(\"Error updating expense. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainHeading\",\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseForm, {\n        addExpense: addExpense,\n        expenseToUpdate: expenseToUpdate,\n        updateExpense: updateExpense,\n        resetExpenseToUpdate: resetExpenseToUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expenseContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseInfo, {\n          expenses: state.expenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n          expenses: state.expenses,\n          deleteExpense: deleteExpense,\n          changeExpenseToUpdate: setExpenseToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"2JddbxOfotnzzm8GBLSjSC/hvjY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useReducer","useEffect","getFirestore","collection","addDoc","updateDoc","doc","deleteDoc","ExpenseForm","ExpenseInfo","ExpenseList","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","db","reducer","state","action","payload","type","expenses","expense","filter","id","expensesDuplicate","expensePos","App","_s","dispatch","expenseToUpdate","setExpenseToUpdate","fetchData","querySnapshot","getDocs","expensesData","forEach","push","data","addExpense","docRef","newExpense","success","error","console","deleteExpense","resetExpenseToUpdate","updateExpense","findIndex","exp","children","fileName","_jsxFileName","lineNumber","columnNumber","className","changeExpenseToUpdate","_c","$RefreshReg$"],"sources":["C:/Users/bhsaikir/Desktop/CN/cra_q2_scaffold/src/App.js"],"sourcesContent":["import { useState, useReducer, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n  updateDoc,\n  doc,\n  deleteDoc,\n} from \"firebase/firestore\";\n\n// components imports\nimport ExpenseForm from \"./components/ExpenseForm/ExpenseForm\";\nimport ExpenseInfo from \"./components/ExpenseInfo/ExpenseInfo\";\nimport ExpenseList from \"./components/ExpenseList/ExpenseList\";\n\n// react toasts\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst db = getFirestore();\n\nconst reducer = (state, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case \"ADD_EXPENSE\": {\n      return {\n        expenses: [payload.expense, ...state.expenses],\n      };\n    }\n    case \"REMOVE_EXPENSE\": {\n      return {\n        expenses: state.expenses.filter((expense) => expense.id !== payload.id),\n      };\n    }\n    case \"UPDATE_EXPENSE\": {\n      const expensesDuplicate = state.expenses;\n      expensesDuplicate[payload.expensePos] = payload.expense;\n      return {\n        expenses: expensesDuplicate,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, { expenses: [] });\n  const [expenseToUpdate, setExpenseToUpdate] = useState(null);\n\n  useEffect(() => {\n    // Fetch expenses from Firestore and update state\n    const fetchData = async () => {\n      // Assuming 'expenses' is your collection name\n      const querySnapshot = await getDocs(collection(db, \"expenses\"));\n\n      const expensesData = [];\n      querySnapshot.forEach((doc) => {\n        expensesData.push({ id: doc.id, ...doc.data() });\n      });\n\n      dispatch({ type: \"SET_EXPENSES\", payload: { expenses: expensesData } });\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once on component mount\n\n  const addExpense = async (expense) => {\n    try {\n      const docRef = await addDoc(collection(db, \"expenses\"), { ...expense });\n      const newExpense = { ...expense, id: docRef.id };\n\n      dispatch({\n        type: \"ADD_EXPENSE\",\n        payload: { expense: newExpense },\n      });\n\n      toast.success(\"Expense added successfully.\");\n    } catch (error) {\n      console.error(\"Error adding expense: \", error);\n      toast.error(\"Error adding expense. Please try again.\");\n    }\n  };\n\n  const deleteExpense = async (id) => {\n    try {\n      await deleteDoc(doc(db, \"expenses\", id));\n\n      dispatch({ type: \"REMOVE_EXPENSE\", payload: { id } });\n      toast.success(\"Expense deleted successfully.\");\n    } catch (error) {\n      console.error(\"Error deleting expense: \", error);\n      toast.error(\"Error deleting expense. Please try again.\");\n    }\n  };\n\n  const resetExpenseToUpdate = () => {\n    setExpenseToUpdate(null);\n  };\n\n  const updateExpense = async (expense) => {\n    const expensePos = state.expenses.findIndex((exp) => exp.id === expense.id);\n\n    if (expensePos === -1) {\n      return false;\n    }\n\n    try {\n      await updateDoc(doc(db, \"expenses\", expense.id), { ...expense });\n\n      dispatch({ type: \"UPDATE_EXPENSE\", payload: { expensePos, expense } });\n      toast.success(\"Expense updated successfully.\");\n    } catch (error) {\n      console.error(\"Error updating expense: \", error);\n      toast.error(\"Error updating expense. Please try again.\");\n    }\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <h2 className=\"mainHeading\">Expense Tracker</h2>\n      <div className=\"App\">\n        <ExpenseForm\n          addExpense={addExpense}\n          expenseToUpdate={expenseToUpdate}\n          updateExpense={updateExpense}\n          resetExpenseToUpdate={resetExpenseToUpdate}\n        />\n        <div className=\"expenseContainer\">\n          <ExpenseInfo expenses={state.expenses} />\n          <ExpenseList\n            expenses={state.expenses}\n            deleteExpense={deleteExpense}\n            changeExpenseToUpdate={setExpenseToUpdate}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}